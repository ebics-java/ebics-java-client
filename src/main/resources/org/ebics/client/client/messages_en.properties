 #
 # Copyright (c) 1990-2012 kopiLeft Development SARL
 #
 # This library is free software; you can redistribute it and/or
 # modify it under the terms of the GNU Lesser General Public
 # License version 2.1 as published by the Free Software Foundation.
 #
 # This library is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 # Lesser General Public License for more details.
 #
 # You should have received a copy of the GNU Lesser General Public
 # License along with this library; if not, write to the Free Software
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 #
 # $Id: messages_en.properties 2 2012-02-28 09:39:55Z bentaher $
 #
 
app.cache.clear   = Clearing traces cache
app.quit.banks    = Saving {0} bank information
app.quit.error    = Error while saving users information
app.quit.partners = Saving {0} partner information
app.quit.users    = Saving {0} user information

download.file.error = Cannot download the requested file
download.date.error = Cannot parse download date {0}
btf.parse.error  = Cannot parse BTF from string {0}. Input is not matching given reg-exp patter: ([A-Z0-9]{3}):([A-Z0-9]{3,10})?:([A-Z0-9]{2,3})?:([a-z]{3})?:([a-z\\.0-9]{1,10}):([0-9]{3})?:([0-9]{2})?:([A-Z0-9]{1,4})?

hia.request.send = Sending authentication and encryption certificates for {0} user
hia.send.error   = The authentication and encryption certificates has not been sent for the {0} user
hia.send.success = The authentication and encryption certificates has been sent correctly for {0} user

hpb.request.send = Retrieving the public bank keys for {0} user
hpb.send.error   = Cannot retrieve the bank public keys for {0} user
hpb.send.success = The bank public keys has been retrieved correctly for the {0} user

http.code.error = Wrong returned HTTP code: {0}

ini.request.send   = Sending the signature certificate for user {0}
ini.send.error     = The signature certificate cannot be sent for the {0} user
ini.send.success   = The signature certificate has been sent correctly for the {0} user

init.configuration = Configuration initialization

upload.file.error = Cannot upload file {0} to the ebics server
upload.segment    = Uploading segment number {0}

user.already.hia.initialized = The authentication and encryption certificates has already been sent for the {0} user
user.already.initialized     = The signature certificate has already been sent for the {0} user
user.create.directories      = Creating necessary directories for {0} user
user.create.error            = Cannot create user
user.create.info             = Creating new user {0}
user.create.success          = The user {0} was created successfully
user.load.error              = Cannot load user
user.load.info               = Loading user {0}
user.load.success            = The user {0} was loaded successfully


spr.request.send             = Locking the user {0}
spr.send.error               = Error while locking the user {0}
spr.send.success             = The user {0} is now locked. Initializations steps should be done again  